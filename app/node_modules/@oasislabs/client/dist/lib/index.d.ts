import Gateway from '@oasislabs/gateway';
import { bytes } from '@oasislabs/common';
import { OasisCoder, Service, Address, Balance, deploy, DeployHeader, setGateway, defaultOasisGateway, fromWasm, fromWasmSync } from '@oasislabs/service';
import { Nonce, PublicKey, PrivateKey, Deoxysii, encrypt, decrypt } from '@oasislabs/confidential';
import { Web3Gateway } from '@oasislabs/web3';
declare const _default: {
    Service: typeof Service;
    Address: typeof Address;
    Balance: typeof Balance;
    deploy: typeof deploy;
    Wallet: typeof import("ethers").Wallet;
    setGateway: typeof setGateway;
    defaultOasisGateway: typeof defaultOasisGateway;
    gateways: {
        Gateway: typeof Gateway;
        Web3Gateway: typeof Web3Gateway;
    };
    utils: {
        DeployHeader: typeof DeployHeader;
        Deoxysii: typeof Deoxysii;
        OasisCoder: typeof OasisCoder;
        Nonce: typeof Nonce;
        PrivateKey: typeof PrivateKey;
        PublicKey: typeof PublicKey;
        bytes: typeof bytes;
        cbor: {
            encode: typeof import("@oasislabs/common/dist/lib/src/cbor").encode;
            decode: typeof import("@oasislabs/common/dist/lib/src/cbor").decode;
        };
        decrypt: typeof decrypt;
        encrypt: typeof encrypt;
        keccak256: import("js-sha3").Hash;
        idl: {
            fromWasm: typeof fromWasm;
            fromWasmSync: typeof fromWasmSync;
        };
    };
    workspace: any;
    disconnect(): void;
};
export default _default;
